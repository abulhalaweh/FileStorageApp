{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.css","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/confirmation/confirmation.component.css","webpack:///./src/app/account/confirmation/confirmation.component.html","webpack:///./src/app/account/confirmation/confirmation.component.ts","webpack:///./src/app/account/login/login.component.html","webpack:///./src/app/account/login/login.component.ts","webpack:///./src/app/account/register/register.component.html","webpack:///./src/app/account/register/register.component.ts","webpack:///./src/app/account/socialLogin.ts","webpack:///./src/app/account/socialloginConfig.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/profile/change.login/change.login.component.html","webpack:///./src/app/profile/change.login/change.login.component.ts","webpack:///./src/app/profile/change.password/change.password.component.html","webpack:///./src/app/profile/change.password/change.password.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/shared.profile.css","webpack:///./src/app/profile/userInfo/user-info.component.css","webpack:///./src/app/profile/userInfo/user-info.component.html","webpack:///./src/app/profile/userInfo/user.info.component.ts","webpack:///./src/app/profile/users.data/users-data.component.css","webpack:///./src/app/profile/users.data/users-data.component.html","webpack:///./src/app/profile/users.data/users.data.component.ts","webpack:///./src/directives/empty.validator.directive.ts","webpack:///./src/directives/equal.validator.directive.ts","webpack:///./src/directives/max.validator.directive.ts","webpack:///./src/directives/min.validator.directive.ts","webpack:///./src/directives/user-existence.validator.ts","webpack:///./src/directives/validators.module.ts","webpack:///./src/enums/enum.models.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/change.password.model.ts","webpack:///./src/models/email.post.model.ts","webpack:///./src/models/error.model.ts","webpack:///./src/models/google.response.model.ts","webpack:///./src/models/user.model.ts","webpack:///./src/services/account.service.ts","webpack:///./src/services/api.service.ts","webpack:///./src/services/errorHandler.service.ts","webpack:///./src/services/hub.service.ts","webpack:///./src/services/mapping.service.ts","webpack:///./src/services/profile.service.ts","webpack:///./src/services/requestBuilder.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".modal-content{\\r\\n    background-color: rgba(162, 211, 240, 0.849);\\r\\n    border-radius: 60px;\\r\\n}\\r\\n\\r\\n.modal-lg{\\r\\n    width: 400px;\\r\\n}\\r\\n\\r\\n#titleRegist, #titleLog{\\r\\n    font-family: Helvetica;\\r\\n    font-size: 30px;\\r\\n    color: #ffffff;\\r\\n}\\r\\n\\r\\n#titleRegist{\\r\\n    margin-left: 35%;\\r\\n}\\r\\n\\r\\n#titleLog{\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n.GooglePlus{\\r\\n\\ttext-align: center;\\r\\n    color: #ffffff;\\r\\n    margin-bottom: 10px;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.GooglePlus button{\\r\\n\\tbackground: none;\\r\\n\\tborder: none;\\r\\n\\tcolor: rgb(73, 70, 70);\\r\\n\\toutline:none;\\r\\n    transition: 1s;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.GooglePlus button:hover{\\r\\n    color: whitesmoke;\\r\\n    transition: 1s;\\r\\n}\\r\\n\\r\\n.GooglePlus button:active{\\r\\n    color: rgb(73, 70, 70);\\r\\n    transition: 1s;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n    font-size: 15px;\\r\\n    box-shadow: inset 0 0 25px rgba(153, 153, 207, 0.50);\\r\\n    width: 350px;\\r\\n    border-radius: 8px;\\r\\n    background-color: none;\\r\\n}\\r\\n\\r\\n.danger-alert{\\r\\n    min-height: 35px;\\r\\n    box-shadow: inset 0 0 25px rgba(199, 45, 45, 0.616);\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.checkbox{\\r\\n    width: 15px;\\r\\n    height: 15px;\\r\\n    display: inline-block;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n.label {\\r\\n    font-size: 20px;\\r\\n    color: whitesmoke;\\r\\n}\\r\\n\\r\\n#reg-link {\\r\\n    font-size: 20px;\\r\\n    color: whitesmoke;\\r\\n    text-decoration: none;\\r\\n    transition: 0.8s;\\r\\n    width: 230px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#reg-link:hover {\\r\\n    color: rgba(46, 59, 58, 0.884);\\r\\n    transition: 0.8s;\\r\\n}\"","import { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { AccountService } from '../../services/account.service';\r\nimport { RequestBuilderService } from '../../services/requestBuilder.service';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ErrorHandlerService } from '../../services/errorHandler.service';\r\n\r\nimport { SocialLoginModule, AuthServiceConfig} from 'angular-6-social-login';\r\nimport { getAuthServiceConfigs } from './socialloginConfig';\r\nimport { ValidatorsModule } from '../../directives/validators.module';\r\nimport { EqualValidator } from '../../directives/equal.validator.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SocialLoginModule,\r\n    ValidatorsModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ConfirmationComponent,\r\n    EqualValidator\r\n  ],\r\n  exports: [],\r\n  providers: [\r\n    AccountService,\r\n    RequestBuilderService,\r\n    ApiService,\r\n    ErrorHandlerService,\r\n    {\r\n      provide: AuthServiceConfig,\r\n      useFactory: getAuthServiceConfigs\r\n    }\r\n  ]\r\n})\r\n\r\nexport class AccountModule { }\r\n","module.exports = \"#confirmation{\\r\\n    /* display: none; */\\r\\n}\\r\\n\\r\\n.modal-sm{\\r\\n    width: 250px;\\r\\n}\\r\\n\\r\\n#ConfirmModal input{\\r\\n    display: block;\\r\\n    margin: auto;\\r\\n    width: 120px;\\r\\n    border-radius: 10px;\\r\\n    margin-bottom: 5px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#cancelBtn{\\r\\n    margin: auto;\\r\\n    width: 120px;\\r\\n}\\r\\n\\r\\n#titleConfirm{\\r\\n    font-family: Helvetica;\\r\\n    font-size: 20px;\\r\\n    color: #ffffff;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<a #confirmation id=\\\"confirmation\\\" data-toggle=\\\"modal\\\" data-target=\\\"#ConfirmModal\\\" href=\\\"#\\\"></a>\\r\\n\\r\\n<div id=\\\"ConfirmModal\\\" class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" tabindex=\\\"-1\\\" role=\\\"combobox\\\" aria-labelledby=\\\"confirmModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n    \\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\" id=\\\"titleConfirm\\\">You don't have an account, choose the register type</h5>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"externalSignIn.proceedWithLogin($event.target.value)\\\" value=\\\"Patient\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"externalSignIn.proceedWithLogin($event.target.value)\\\" value=\\\"Doctor\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"button\\\" id=\\\"cancelBtn\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"externalSignIn.proceedWithLogin($event.target.value)\\\" value=\\\"Cancel\\\">Cancel</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component, ViewChild, ElementRef, Input, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { SocialLogin } from '../socialLogin';\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\n@Component({\r\n    selector: 'app-confirmation-cmp',\r\n    templateUrl: './confirmation.component.html',\r\n    styleUrls: ['../account.css', './confirmation.component.css']\r\n})\r\n\r\nexport class ConfirmationComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() externalSignIn: SocialLogin;\r\n    @ViewChild('confirmation') confirmModal: ElementRef<HTMLElement>;\r\n    @ViewChild('closeBtn') closeBtn: ElementRef<HTMLElement>;\r\n\r\n    ngAfterViewInit(): void {\r\n        this.externalSignIn.callConfirmOption\r\n        .pipe(untilComponentDestroyed(this))\r\n            .subscribe(() => {\r\n                this.confirmModal.nativeElement.click();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n","module.exports = \"<div #LoginModal id=\\\"LoginModal\\\" class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"logModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n    \\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\" id=\\\"titleLog\\\">Login</h5>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"GooglePlus\\\">\\r\\n                    <button type=\\\"submit\\\" (click)=\\\"externalSignIn.googleSignIn()\\\" name=\\\"provider\\\" value=\\\"\\\">\\r\\n                        <i class=\\\"fab fa-google-plus fa-4x\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <form #logForm=\\\"ngForm\\\" userExists=\\\"true\\\" novalidate (ngSubmit)=\\\"onSubmit(logForm.value)\\\">\\r\\n                    \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div *ngIf=\\\"logForm.invalid && logForm.errors?.server\\\" class=\\\"form-control danger-alert\\\">\\r\\n                            <div>\\r\\n                                {{logForm.errors.server}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\" \\r\\n                        required email placeholder=\\\"Email\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"email.invalid && email.dirty\\\"\\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n                \\r\\n                            <div *ngIf=\\\"email.errors.required\\\">\\r\\n                                Email is required.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"email.errors.email\\\">\\r\\n                                Incorrect email input.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"email.errors?.userExists\\\">\\r\\n                                {{email.errors.userExists}}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"email.errors?.server\\\">\\r\\n                                {{email.errors.server}}\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" \\r\\n                        required minlength=\\\"6\\\" maxlength=\\\"25\\\" placeholder=\\\"Password\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"password.invalid && password.dirty\\\"\\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n                \\r\\n                            <div *ngIf=\\\"password.errors.required\\\">\\r\\n                                Password is required.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"password.errors.minlength\\\">\\r\\n                                Password must be between 6 and 25 characters.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"password.errors?.server\\\">\\r\\n                                {{password.errors.server}}\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <a (click)=\\\"goToRegister()\\\" id=\\\"reg-link\\\" class=\\\"nav-link\\\">Register as a new user</a>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <button type=\\\"button\\\" #closeBtn (click)=\\\"formReset()\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                            <button type=\\\"submit\\\" [disabled]=\\\"logForm.invalid || logForm.disabled\\\" class=\\\"btn btn-primary\\\">Login</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n                \\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-confirmation-cmp [externalSignIn]=\\\"externalSignIn\\\"></app-confirmation-cmp>\"","import { Component, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SocialLogin } from '../socialLogin';\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\nimport { ErrorHandlerService } from '../../../services/errorHandler.service';\r\nimport { AccountService } from '../../../services/account.service';\r\nimport { AuthService } from 'angular-6-social-login';\r\n\r\n@Component({\r\n    selector: 'app-log-cmp',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['../account.css']\r\n})\r\n\r\nexport class LoginComponent implements OnDestroy {\r\n\r\n    @ViewChild('logForm') form: NgForm;\r\n    @ViewChild('closeBtn') closeBtn: ElementRef<HTMLElement>;\r\n    private externalSignIn: SocialLogin;\r\n\r\n    constructor(private accountSrc: AccountService,\r\n                private errorHandler: ErrorHandlerService,\r\n                private socialAuthSrc: AuthService,\r\n                private route: ActivatedRoute,\r\n                private router: Router) {\r\n    route.queryParams\r\n    .pipe(untilComponentDestroyed(this))\r\n    .subscribe((params) => this.autoOpen(params) );\r\n        this.configSocialLogin();\r\n    }\r\n\r\n    public configSocialLogin(): void {\r\n        this.externalSignIn = new SocialLogin(\r\n            this.socialAuthSrc,\r\n            this.accountSrc\r\n        );\r\n\r\n        this.externalSignIn.callSuccess\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe(() => {\r\n            this.closeBtn.nativeElement.click();\r\n            this.form.form.enable();\r\n        });\r\n\r\n        this.externalSignIn.callFailure\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((errRes) => {\r\n            this.errorHandler.setServerErrors(errRes, {}, this.form);\r\n        });\r\n\r\n        this.externalSignIn.callFormFreeze\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((freeze: boolean) => {\r\n            this.changeFormState(freeze);\r\n        });\r\n    }\r\n\r\n    private changeFormState(freeze: boolean): void {\r\n        if (freeze === true) {\r\n            this.form.form.disable();\r\n        } else {\r\n            this.form.form.enable();\r\n        }\r\n    }\r\n\r\n    private autoOpen(params: any): void {\r\n        if (params['redirect'] === 'true') {\r\n          setTimeout(() => {\r\n              document.getElementById('logLink').click();\r\n          }, 200);\r\n        }\r\n    }\r\n\r\n    public onSubmit(model: ILoginModel) {\r\n        this.form.form.disable();\r\n\r\n        this.accountSrc.getPasswordTokens(model)\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((res: AuthTokenModel) => {\r\n            this.formReset();\r\n            this.proccessOnSuccess(res);\r\n        }, (errRes) => {\r\n            this.form.form.enable();\r\n            this.errorHandler.setServerErrors(errRes, model, this.form);\r\n        });\r\n    }\r\n\r\n    private proccessOnSuccess(model: AuthTokenModel): void {\r\n        this.accountSrc.configureTokens(model);\r\n        this.closeBtn.nativeElement.click();\r\n        this.form.form.enable();\r\n    }\r\n\r\n    public formReset(): void {\r\n        this.form.reset();\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    public goToRegister(): void {\r\n        this.closeBtn.nativeElement.click();\r\n        this.router.navigate( ['/account/register'],\r\n        {\r\n            queryParams: { 'redirect': true },\r\n            skipLocationChange: true\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"RegisterModal\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n    \\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\" id=\\\"titleRegist\\\">Register</h5>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"GooglePlus\\\">\\r\\n                    <button type=\\\"submit\\\" (click)=\\\"externalSignIn.googleSignIn()\\\" name=\\\"provider\\\" value=\\\"\\\">\\r\\n                        <i class=\\\"fab fa-google-plus fa-4x\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <form #regForm=\\\"ngForm\\\" userExists=\\\"false\\\" novalidate (ngSubmit)=\\\"onSubmit(regForm.value)\\\">\\r\\n                    \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div *ngIf=\\\"regForm.invalid && regForm.errors?.server\\\" class=\\\"form-control danger-alert\\\">\\r\\n                            <div>\\r\\n                                {{regForm.errors.server}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" name=\\\"lastName\\\" ngModel #lastName=\\\"ngModel\\\" \\r\\n                        required validateEmpty minlength=\\\"2\\\" maxlength=\\\"15\\\" placeholder=\\\"Last name\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"lastName.invalid && lastName.dirty\\\"\\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n                \\r\\n                            <div *ngIf=\\\"lastName.errors.required\\\">\\r\\n                                Last name is required.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"lastName.errors.minlength\\\">\\r\\n                                Last name must be at least 2 characters long.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"lastName.errors.validateEmpty\\\">\\r\\n                                Last name cannot have white spaces.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"lastName.errors?.server\\\">\\r\\n                                {{lastName.errors.server}}\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" name=\\\"firstName\\\" ngModel #firstName=\\\"ngModel\\\" \\r\\n                        required validateEmpty minlength=\\\"2\\\" maxlength=\\\"15\\\" placeholder=\\\"First name\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"firstName.invalid && firstName.dirty\\\"\\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n                \\r\\n                            <div *ngIf=\\\"firstName.errors.required\\\">\\r\\n                                First name is required.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"firstName.errors.minlength\\\">\\r\\n                                First name must be at least 2 characters long.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"firstName.errors.validateEmpty\\\">\\r\\n                                First name cannot have white spaces.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"firstName.errors?.server\\\">\\r\\n                                {{firstName.errors.server}}\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\"\\r\\n                        required email placeholder=\\\"Email\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"email.invalid && email.dirty\\\"\\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n                \\r\\n                            <div *ngIf=\\\"email.errors.required\\\">\\r\\n                                Email is required.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"email.errors.email\\\">\\r\\n                                Incorrect email input.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"email.errors.userExists\\\">\\r\\n                                {{email.errors.userExists}}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"email.errors?.server\\\">\\r\\n                                {{email.errors.server}}\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" \\r\\n                        required minlength=\\\"6\\\" maxlength=\\\"25\\\" placeholder=\\\"Password\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"password.invalid && password.dirty\\\"\\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n                \\r\\n                            <div *ngIf=\\\"password.errors.required\\\">\\r\\n                                Password is required.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"password.errors.minlength\\\">\\r\\n                                Password must be between 6 and 25 characters.\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"password.errors?.server\\\">\\r\\n                                {{password.errors.server}}\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\" ngModel #confirmPassword=\\\"ngModel\\\" \\r\\n                        validateEqual=\\\"password\\\" maxlength=\\\"25\\\" placeholder=\\\"Password confirmation\\\" />\\r\\n                \\r\\n                        <div *ngIf=\\\"confirmPassword.invalid && !confirmPassword.pristine\\\" \\r\\n                        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n                            <div *ngIf=\\\"confirmPassword.errors.validateEqual === false\\\">\\r\\n                                Password confirmation doesn't match password.\\r\\n                            </div>\\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control checkbox\\\" type=\\\"checkbox\\\" name=\\\"registerAsDoctor\\\" ngModel>\\r\\n                        <label class=\\\"label\\\" for=\\\"\\\">Register as a admin</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <button type=\\\"button\\\" #closeBtn (click)=\\\"formReset()\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                            <button type=\\\"submit\\\" [disabled]=\\\"regForm.invalid || regForm.disabled\\\" class=\\\"btn btn-primary\\\">Register</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n                \\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-confirmation-cmp [externalSignIn]=\\\"externalSignIn\\\"></app-confirmation-cmp>\\r\\n\"","import { Subscription } from 'rxjs';\r\nimport { Component, OnDestroy, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { AccountService } from '../../../services/account.service';\r\nimport { ErrorHandlerService } from '../../../services/errorHandler.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SocialLogin } from '../socialLogin';\r\nimport { AuthService } from '../../../../node_modules/angular-6-social-login';\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\n@Component({\r\n    selector: 'app-reg-cmp',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['../account.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnDestroy {\r\n\r\n  @ViewChild('regForm') form: NgForm;\r\n  @ViewChild('closeBtn') closeBtn: ElementRef<HTMLElement>;\r\n  private externalSignIn: SocialLogin;\r\n\r\n\r\n  constructor(private accountSrc: AccountService,\r\n              private errorHandler: ErrorHandlerService,\r\n              private socialAuthSrc: AuthService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    route.queryParams\r\n    .pipe(untilComponentDestroyed(this))\r\n    .subscribe((params) => this.autoOpen(params) );\r\n    this.configSocialLogin();\r\n  }\r\n\r\n  public configSocialLogin(): void {\r\n        this.externalSignIn = new SocialLogin(\r\n            this.socialAuthSrc,\r\n            this.accountSrc\r\n        );\r\n\r\n        this.externalSignIn.callSuccess\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe(() => {\r\n            this.closeBtn.nativeElement.click();\r\n            this.form.form.enable();\r\n        });\r\n\r\n        this.externalSignIn.callFailure\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((errRes) => {\r\n            this.errorHandler.setServerErrors(errRes, {}, this.form);\r\n        });\r\n\r\n        this.externalSignIn.callFormFreeze\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((freeze: boolean) => {\r\n            this.changeFormState(freeze);\r\n        });\r\n    }\r\n\r\n    private changeFormState(freeze: boolean): void {\r\n        if (freeze === true) {\r\n            this.form.form.disable();\r\n        } else {\r\n            this.form.form.enable();\r\n        }\r\n    }\r\n\r\n  private autoOpen(params: any): void {\r\n      if (params['redirect'] === 'true') {\r\n        setTimeout(() => {\r\n            document.getElementById('regLink').click();\r\n        }, 200);\r\n      }\r\n  }\r\n\r\n  public onSubmit(model: IRegisterModel) {\r\n        model.registerAsDoctor = model.registerAsDoctor !== '';\r\n        delete model['confirmPassword'];\r\n        this.form.form.disable();\r\n\r\n        this.accountSrc.register(model)\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((regRes: any) => {\r\n            this.accountSrc.getPasswordTokens(model)\r\n            .pipe(untilComponentDestroyed(this))\r\n            .subscribe((res: AuthTokenModel) => {\r\n                this.formReset();\r\n                this.accountSrc.configureTokens(res);\r\n                this.closeBtn.nativeElement.click();\r\n                this.form.form.enable();\r\n            }, (errRes) => {\r\n                this.processErrors(errRes, model);\r\n            });\r\n        }, (errRes) => {\r\n            this.processErrors(errRes, model);\r\n        });\r\n    }\r\n\r\n    private processErrors(errRes: any, model: IRegisterModel): void {\r\n        this.form.form.enable();\r\n        this.errorHandler.setServerErrors(errRes, model, this.form);\r\n    }\r\n\r\n    public formReset(): void {\r\n        this.form.reset();\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n","import {AuthService, GoogleLoginProvider} from 'angular-6-social-login';\r\nimport { Output, EventEmitter } from '../../../node_modules/@angular/core';\r\n\r\nimport { AccountService } from '../../services/account.service';\r\nimport { GoogleResponse } from '../../models/google.response.model';\r\n\r\nexport class SocialLogin {\r\n\r\n    private googleResponse: GoogleResponse;\r\n    @Output() callConfirmOption = new EventEmitter();\r\n    @Output() callFormFreeze = new EventEmitter();\r\n    @Output() callSuccess = new EventEmitter();\r\n    @Output() callFailure = new EventEmitter();\r\n\r\n    constructor(private socialAuthService: AuthService,\r\n                private accountSrc: AccountService) {\r\n    }\r\n\r\n    public googleSignIn(): void {\r\n        const socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n\r\n        this.socialAuthService.signIn(socialPlatformProvider).then(\r\n          (userData) => {\r\n            this.googleResponse = new GoogleResponse(userData.idToken);\r\n            this.userExists(userData.email);\r\n          }\r\n        );\r\n    }\r\n\r\n    private userExists(email: string): void {\r\n        this.accountSrc.userExists(email).subscribe(ex => {\r\n            if (ex === false) {\r\n                this.callConfirmOption.emit();\r\n            } else {\r\n                this.proceedWithLogin('');\r\n            }\r\n        });\r\n    }\r\n\r\n    public proceedWithLogin(value: string): void {\r\n        if (value !== 'Cancel') {\r\n            this.googleResponse.RegisterAsDoctor = value === 'Doctor';\r\n            this.callFormFreeze.emit(true);\r\n\r\n            this.accountSrc.getAuthorizationCode(this.googleResponse).subscribe((res: any) => {\r\n                const url = String( res.url );\r\n                const index = url.indexOf('=');\r\n                const code = url.substring(index + 1);\r\n\r\n                this.accountSrc.getAuthorizationTokens(code).subscribe((res1: AuthTokenModel) => {\r\n                    this.proceedOnSuccess(res1);\r\n                }, (errRes) => {\r\n                    this.callFormFreeze.emit(false);\r\n                    this.callFailure.emit(errRes);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private proceedOnSuccess(model: AuthTokenModel): void {\r\n        this.accountSrc.configureTokens(model);\r\n        this.callSuccess.emit();\r\n    }\r\n}\r\n","import {AuthServiceConfig, GoogleLoginProvider} from 'angular-6-social-login';\r\n\r\nexport function getAuthServiceConfigs(): AuthServiceConfig {\r\n    return new AuthServiceConfig(\r\n        [\r\n            {\r\n                id: GoogleLoginProvider.PROVIDER_ID,\r\n          provider: new GoogleLoginProvider('719762341905-nsgda0ahgf2loco1mte1jrtbgpu5gg0d.apps.googleusercontent.com')\r\n            }\r\n        ]\r\n    );\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { LoginComponent } from './account/login/login.component';\r\nimport { RegisterComponent } from './account/register/register.component';\r\nimport { UserInfoComponent } from './profile/userInfo/user.info.component';\r\nimport { UsersDataComponent } from './profile/users.data/users.data.component';\r\nimport { ChangeLoginComponent } from './profile/change.login/change.login.component';\r\nimport { ChangePasswordComponent } from './profile/change.password/change.password.component';\r\n\r\nconst accountRoutes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: '**', redirectTo: '/' }\r\n  ];\r\n\r\nconst profileRoutes: Routes = [\r\n    { path: 'info', component: UserInfoComponent },\r\n    { path: 'data', component: UsersDataComponent },\r\n    { path: 'changeLogin', component: ChangeLoginComponent },\r\n    { path: 'changePassword', component: ChangePasswordComponent },\r\n    { path: '**', redirectTo: '/' }\r\n  ];\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'account', children: accountRoutes },\r\n    { path: 'profile', component: ProfileComponent, children: profileRoutes },\r\n    { path: '**', redirectTo: '/' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\n\r\nexport class AppRoutingModule {}","module.exports = \"body{\\r\\n\\tfont-family: Helvetica;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n\\tfloat:left;\\r\\n\\tfont-size: 44px;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\n.logo a, .logo a:hover{\\r\\n\\tcolor:#333333;\\r\\n\\ttext-decoration: none;\\r\\n}\\r\\n\\r\\n.nova, .clinic{\\r\\n\\tdisplay: inline-block;\\r\\n\\tcolor: #ff8919;\\r\\n}\\r\\n\\r\\n.clinic{\\r\\n\\tcolor: #333333;\\r\\n}\\r\\n\\r\\n.navbar{\\r\\n\\tpadding-left: 60px;\\r\\n\\theight: 80px;\\r\\n\\tmargin-bottom: 10px;\\r\\n\\tbackground-color: #C4E7FF;\\r\\n}\\r\\n\\r\\n.custom{\\r\\n\\tborder: none;\\r\\n}\\r\\n\\r\\n.nav-item{\\r\\n\\tfont-size: 23px;\\r\\n\\tmargin-left: 23px;\\r\\n\\topacity: 1;\\r\\n\\ttransition: opacity 1s;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\n#body-container{\\r\\n\\theight: 370px;\\r\\n\\tbackground: url('medicineWithLove.jpg') no-repeat center/cover #8ddbdf;\\r\\n}\\r\\n\\r\\n.footer{\\r\\n\\tbackground-color: #C4E7FF;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-top: 25px;\\r\\n\\tpadding: 40px 0px;\\r\\n\\theight: 100px;\\r\\n}\\r\\n\\r\\n.footer > .container{\\r\\n\\theight: 70px;\\r\\n\\tmargin-top: -2%;\\r\\n}\\r\\n\\r\\n.socialnet a{\\r\\n\\tpadding: 0px 20px;\\r\\n\\tcolor: #333333;\\r\\n}\\r\\n\\r\\n.socialnet i:hover{\\r\\n\\tcolor: #ff8919;\\r\\n}\\r\\n\\r\\n.hide {\\r\\n\\topacity: 0;\\r\\n\\ttransition: opacity 1s;\\r\\n }\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-light\\\">\\r\\n\\r\\n    <div class=\\\"logo\\\" routerLink=\\\"/\\\" skipLocationChange>\\r\\n        <i class=\\\"fa fa-medkit\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        <div class=\\\"nova\\\">File Storage</div>\\r\\n        <div class=\\\"clinic\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"navbar-toggler hidden-lg-up\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavId\\\" aria-controls=\\\"collapsibleNavId\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavId\\\">\\r\\n\\r\\n      <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n        <li class=\\\"nav-item active\\\" routerLink=\\\"/\\\" skipLocationChange>\\r\\n          <a class=\\\"nav-link\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" (click)=\\\"isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link\\\">My Profile</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" (click)=\\\"isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link\\\">My Files</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLink=\\\"/account/register\\\" skipLocationChange>\\r\\n          <a id=\\\"regLink\\\"\\r\\n             class=\\\"nav-link\\\"\\r\\n             data-toggle=\\\"modal\\\"\\r\\n             data-target=\\\"#RegisterModal\\\">\\r\\n            Register\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLink=\\\"/account/login\\\" skipLocationChange>\\r\\n          <a id=\\\"logLink\\\"\\r\\n             class=\\\"nav-link\\\"\\r\\n             data-toggle=\\\"modal\\\"\\r\\n             data-target=\\\"#LoginModal\\\">\\r\\n            Login\\r\\n          </a>\\r\\n        </li>\\r\\n\\r\\n        <li class=\\\"nav-item\\\" [ngClass]=\\\"{hide: !loggedIn}\\\">\\r\\n          <div *ngIf=\\\"loggedIn === true\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"hasLoggedOut()\\\">Logout</a>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</nav>\\r\\n\\r\\n<div id=\\\"body-container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"footer\\\">\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n    \\r\\n        <div class=\\\"mail\\\">bardakov.arthur@gmail.com</div>\\r\\n    \\r\\n        <div class=\\\"socialnet\\\">\\r\\n            <a href=\\\"#\\\"><i class=\\\"fab fa-facebook fa-2x\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n            <a href=\\\"#\\\"><i class=\\\"fab fa-twitter fa-2x\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n            <a href=\\\"#\\\"><i class=\\\"fab fa-instagram fa-2x\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        </div>\\r\\n    \\r\\n    </div>\\r\\n      \\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  public loggedIn = false;\r\n  private signedIn: Subscription;\r\n  private signedOut: Subscription;\r\n\r\n  constructor(private accountService: AccountService,\r\n              private router: Router) {\r\n    this.signedIn = accountService.isLoggedIn.subscribe(() => this.hasLoggedIn());\r\n    this.signedOut = accountService.isLoggedOut.subscribe(() => this.hasLoggedOut());\r\n  }\r\n\r\n  public isLoggedIn(): void {\r\n    if (this.loggedIn === true) {\r\n      this.router.navigate(['/profile/info'], {skipLocationChange: true});\r\n    } else {\r\n      this.router.navigate( ['/account/login'],\r\n      {\r\n          queryParams: { 'redirect': true },\r\n          skipLocationChange: true\r\n      });\r\n    }\r\n  }\r\n\r\n  public hasLoggedIn(): void {\r\n      this.loggedIn = true;\r\n  }\r\n\r\n  public hasLoggedOut(): void {\r\n    if (this.loggedIn === true) {\r\n      this.accountService.logout();\r\n      this.loggedIn = false;\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n}\r\n","import { HubService } from '../services/hub.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AccountModule } from './account/account.module';\r\nimport { ProfileModule } from './profile/profile.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    AccountModule,\r\n    ProfileModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [HubService],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \".jumbotron-fluid{\\r\\n\\theight: 335px;\\r\\n\\ttext-shadow: grey 1.5px 1.5px 3px;\\r\\n\\tcolor: whitesmoke;\\r\\n}\\r\\n\\r\\n.slider h1{\\r\\n\\tmargin: -1px;\\r\\n\\tpadding: 0;\\r\\n\\ttext-align: center;\\r\\n\\tpadding-top: 80px;\\r\\n\\tfont-size: 54px;\\r\\n\\tcolor:#333333;\\r\\n}\\r\\n\\r\\n.slider p{\\r\\n\\ttext-align: center;\\r\\n\\tpadding-top: 40px;\\r\\n\\tfont-size: 54px;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron-fluid\\\">\\r\\n    <div class=\\\"container slider\\\">\\r\\n        <h1 class=\\\"display-3\\\">Your Cloud Files Storage</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component  } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home-cmp',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['home.component.css']\r\n})\r\n\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"<form #changeLogForm=\\\"ngForm\\\" userExists=\\\"false\\\" novalidate (ngSubmit)=\\\"onChange(changeLogForm, email.value)\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" name=\\\"currentEmail\\\" (change)=\\\"checkUsername(currentEmail)\\\" type=\\\"email\\\" ngModel #currentEmail=\\\"ngModel\\\" \\r\\n        required email placeholder=\\\"Current email\\\" />\\r\\n\\r\\n        <div *ngIf=\\\"currentEmail.invalid && currentEmail.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n            <div *ngIf=\\\"currentEmail.errors.required\\\">\\r\\n                Current email field is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"currentEmail.errors.email\\\">\\r\\n                Incorrect email input.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"currentEmail.errors?.userExists\\\">\\r\\n                {{currentEmail.errors.userExists}}\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" name=\\\"email\\\" type=\\\"email\\\" ngModel #email=\\\"ngModel\\\" \\r\\n        required email placeholder=\\\"New email\\\" />\\r\\n\\r\\n        <div *ngIf=\\\"email.invalid && email.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n            <div *ngIf=\\\"email.errors.required\\\">\\r\\n                New email field is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"email.errors.email\\\">\\r\\n                Incorrect email input.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"email.errors?.userExists\\\">\\r\\n                {{email.errors.userExists}}\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\"\\r\\n            [disabled]=\\\"changeLogForm.invalid || btnBlock\\\"\\r\\n            class=\\\"btn btn-success btn-sm\\\">\\r\\n            Change\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { NgModel, NgForm } from '@angular/forms';\r\n\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\nimport { AccountService } from '../../../services/account.service';\r\nimport { ProfileService } from '../../../services/profile.service';\r\nimport { ErrorHandlerService } from '../../../services/errorHandler.service';\r\n\r\nimport { EmailModel } from '../../../models/email.post.model';\r\nimport { Profile, PostMethod, ControllerType } from '../../../enums/enum.models';\r\n\r\n\r\n@Component({\r\n    selector: 'app-change-log-cmp',\r\n    templateUrl: './change.login.component.html',\r\n    styleUrls: ['../shared.profile.css']\r\n})\r\n\r\nexport class ChangeLoginComponent implements OnDestroy {\r\n\r\n    private userName: string;\r\n    public btnBlock: boolean;\r\n\r\n    constructor(private profileSrc: ProfileService,\r\n                private accounrSrc: AccountService,\r\n                private errorHandler: ErrorHandlerService) {\r\n        this.userName = this.profileSrc.get(Profile.username);\r\n    }\r\n\r\n    public checkUsername(model: NgModel): void {\r\n        if (model.value !== this.userName) {\r\n            model.control.setErrors({userExists: 'The email is incorrect!'});\r\n        }\r\n    }\r\n\r\n    public onChange(form: NgForm, email: string): void {\r\n        form.form.disable();\r\n        this.btnBlock = true;\r\n        const model = new EmailModel(email);\r\n\r\n        this.profileSrc.postData(\r\n            ControllerType.manage,\r\n            PostMethod.changeLogin,\r\n            model\r\n        )\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe(() => {\r\n            alert('The email has been successfully changed!');\r\n            form.reset();\r\n            this.enableForm(form);\r\n            this.accounrSrc.checkAccountAuth();\r\n        }, (err) => {\r\n            this.enableForm(form);\r\n            this.errorHandler.setServerErrors(err, model, form);\r\n        });\r\n    }\r\n\r\n    private enableForm(form: NgForm): void {\r\n        this.btnBlock = false;\r\n        form.form.enable();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n","module.exports = \"<form #changePassForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onChange(changePassForm)\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" \\r\\n        type=\\\"password\\\" \\r\\n        name=\\\"CurrentPassword\\\" \\r\\n        ngModel #CurrentPassword=\\\"ngModel\\\" \\r\\n        required minlength=\\\"6\\\" maxlength=\\\"25\\\" \\r\\n        placeholder=\\\"Current password\\\" />\\r\\n\\r\\n        <div *ngIf=\\\"CurrentPassword.invalid && CurrentPassword.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n            <div *ngIf=\\\"CurrentPassword.errors.required\\\">\\r\\n                Current password field is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"CurrentPassword.errors.minlength\\\">\\r\\n                Password must be between 6 and 25 characters.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"CurrentPassword.errors?.server\\\">\\r\\n                {{CurrentPassword.errors.server}}\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" \\r\\n        type=\\\"password\\\" \\r\\n        name=\\\"NewPassword\\\" \\r\\n        ngModel #NewPassword=\\\"ngModel\\\" \\r\\n        required minlength=\\\"6\\\" maxlength=\\\"25\\\" \\r\\n        placeholder=\\\"New password\\\" />\\r\\n\\r\\n        <div *ngIf=\\\"NewPassword.invalid && NewPassword.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n            <div *ngIf=\\\"NewPassword.errors.required\\\">\\r\\n                New password field is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"NewPassword.errors.minlength\\\">\\r\\n                Password must be between 6 and 25 characters.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"NewPassword.errors?.server\\\">\\r\\n                {{NewPassword.errors.server}}\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\"\\r\\n            [disabled]=\\\"changePassForm.invalid || btnBlock\\\"\\r\\n            class=\\\"btn btn-success btn-sm\\\">\\r\\n            Change\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\nimport { AccountService } from '../../../services/account.service';\r\nimport { ProfileService } from '../../../services/profile.service';\r\nimport { ErrorHandlerService } from '../../../services/errorHandler.service';\r\n\r\nimport { ChangePasswordModel } from '../../../models/change.password.model';\r\nimport { ControllerType, PostMethod } from '../../../enums/enum.models';\r\n\r\n@Component({\r\n    selector: 'app-change-pass-cmp',\r\n    templateUrl: './change.password.component.html',\r\n    styleUrls: ['../shared.profile.css']\r\n})\r\n\r\nexport class ChangePasswordComponent implements OnDestroy {\r\n\r\n    public btnBlock: boolean;\r\n\r\n    constructor(private profileSrc: ProfileService,\r\n                private accounrSrc: AccountService,\r\n                private errorHandler: ErrorHandlerService) {\r\n        this.btnBlock = false;\r\n    }\r\n\r\n    public onChange(form: NgForm): void {\r\n        const model = new ChangePasswordModel(\r\n            String( form.value.CurrentPassword ),\r\n            String( form.value.NewPassword )\r\n        );\r\n        form.form.disable();\r\n        this.btnBlock = true;\r\n\r\n       this.profileSrc.postData(\r\n            ControllerType.manage,\r\n            PostMethod.changePassword,\r\n            model\r\n        )\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe(() => {\r\n            alert('The password has been successfully changed!');\r\n            form.reset();\r\n            this.enableForm(form);\r\n            this.accounrSrc.checkAccountAuth();\r\n        }, (err) => {\r\n            this.enableForm(form);\r\n            this.errorHandler.setServerErrors(err, model, form);\r\n        });\r\n    }\r\n\r\n    private enableForm(form: NgForm): void {\r\n        this.btnBlock = false;\r\n        form.form.enable();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n","module.exports = \"#sideBar{\\r\\n    margin-left: 30px;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n#profileTabs{\\r\\n    display: inline-block;\\r\\n    margin-top: 1%;\\r\\n}\\r\\n\\r\\n.nav a{\\r\\n    color: #FFFCF8;\\r\\n    text-decoration: none;\\r\\n    transition: 0.8s;\\r\\n}\\r\\n\\r\\n.custom-color .active,\\r\\n.custom-color .active:hover {\\r\\n    background-color: rgba(81, 159, 211, 0.829);\\r\\n}\\r\\n\\r\\n#profileContent{\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    margin-left: 10%;\\r\\n    width: 600px;\\r\\n}\"","module.exports = \"<div id=\\\"sideBar\\\">\\r\\n    <div class=\\\"nav flex-column nav-pills custom-color\\\" id=\\\"profileTabs\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n        <a routerLink=\\\"info\\\" skipLocationChange class=\\\"nav-link active\\\" id=\\\"outPut-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#outPut\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Profile</a>\\r\\n        <a routerLink=\\\"/profile/data\\\" skipLocationChange class=\\\"nav-link\\\" id=\\\"outPut-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#outPut\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-profile\\\" aria-selected=\\\"false\\\">Find {{relatedUser}}</a>\\r\\n        <a routerLink=\\\"/profile/data\\\" [queryParams]=\\\"{'addedOnes': true}\\\" skipLocationChange class=\\\"nav-link\\\" id=\\\"outPut-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#outPut\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-messages\\\" aria-selected=\\\"false\\\">Show my {{relatedUser}}</a>\\r\\n        <a routerLink=\\\"/profile/changeLogin\\\" skipLocationChange class=\\\"nav-link\\\" id=\\\"outPut-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#outPut\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-settings\\\" aria-selected=\\\"false\\\">Change Login</a>\\r\\n        <a routerLink=\\\"/profile/changePassword\\\" skipLocationChange class=\\\"nav-link\\\" id=\\\"outPut-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#outPut\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-settings\\\" aria-selected=\\\"false\\\">Change Password</a>\\r\\n    </div>\\r\\n    <div class=\\\"tab-content\\\" id=\\\"profileContent\\\">\\r\\n        <div class=\\\"tab-pane fade show active\\\" id=\\\"outPut\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"outPut-tab\\\"><router-outlet></router-outlet></div>\\r\\n    </div>\\r\\n</div>\"","import { Component  } from '@angular/core';\r\n\r\nimport { ProfileService } from '../../services/profile.service';\r\nimport { MappingService } from '../../services/mapping.service';\r\n\r\n@Component({\r\n    selector: 'app-profile-cmp',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.css'],\r\n    providers: [ProfileService, MappingService]\r\n})\r\n\r\nexport class ProfileComponent {\r\n    public relatedUser: string;\r\n\r\n    constructor(private profileSrc: ProfileService) {\r\n        this.configUserOption();\r\n    }\r\n\r\n    private configUserOption(): void {\r\n        const userRole = this.profileSrc.UserRole;\r\n        this.relatedUser = userRole === 'patient' ? 'doctors' :  'patients';\r\n    }\r\n}\r\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { UserInfoComponent } from './userInfo/user.info.component';\r\nimport { UsersDataComponent } from './users.data/users.data.component';\r\nimport { ChangeLoginComponent } from './change.login/change.login.component';\r\n\r\nimport { MinValidator } from '../../directives/min.validator.directive';\r\nimport { MaxValidator } from '../../directives/max.validator.directive';\r\nimport { ValidatorsModule } from '../../directives/validators.module';\r\nimport { ChangePasswordComponent } from './change.password/change.password.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([]),\r\n    ValidatorsModule\r\n  ],\r\n  declarations: [\r\n    UserInfoComponent,\r\n    UsersDataComponent,\r\n    ChangeLoginComponent,\r\n    ChangePasswordComponent,\r\n    MinValidator,\r\n    MaxValidator\r\n  ]\r\n})\r\n\r\nexport class ProfileModule { }\r\n","module.exports = \".form-control {\\r\\n    font-size: 15px;\\r\\n    box-shadow: inset 0 0 25px rgba(153, 153, 207, 0.50);\\r\\n    width: 220px;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n\\r\\n.danger-alert{\\r\\n    min-height: 35px;\\r\\n    box-shadow: inset 0 0 25px rgba(199, 45, 45, 0.616);\\r\\n    margin-top: 5px;\\r\\n}\"","module.exports = \"#userProfile{\\r\\n    box-shadow: inset 0px 0px 20px 15px rgb(220, 232, 233);\\r\\n    width: 270px;\\r\\n    height: 280px;\\r\\n    padding-top: 1%;\\r\\n    padding-left: 4%;\\r\\n    border-radius: 5px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.invisible{\\r\\n    display: none;\\r\\n}\\r\\n\"","module.exports = \"<form id=\\\"userProfile\\\"\\r\\n    (change)=\\\"onChnage()\\\" \\r\\n    #profileForm=\\\"ngForm\\\" \\r\\n    novalidate \\r\\n    (ngSubmit)=\\\"onSaveChanges()\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div *ngIf=\\\"profileForm.invalid && profileForm.errors?.server\\\" class=\\\"form-control danger-alert\\\">\\r\\n            <div>\\r\\n                {{profileForm.errors.server}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"lastName\\\" ngModel #lastName=\\\"ngModel\\\" \\r\\n        required validateEmpty minlength=\\\"2\\\" maxlength=\\\"15\\\" placeholder=\\\"Last name\\\" />\\r\\n    \\r\\n        <div *ngIf=\\\"lastName.invalid && lastName.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n            <div *ngIf=\\\"lastName.errors.required\\\">\\r\\n                Last name is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"lastName.errors.minlength\\\">\\r\\n                Last name must be at least 2 characters long.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"lastName.errors.validateEmpty\\\">\\r\\n                Last name cannot have white spaces.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"lastName.errors?.server\\\">\\r\\n                {{lastName.errors.server}}\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" name=\\\"firstName\\\" ngModel #firstName=\\\"ngModel\\\" \\r\\n        required validateEmpty minlength=\\\"2\\\" maxlength=\\\"15\\\" placeholder=\\\"First name\\\" />\\r\\n    \\r\\n        <div *ngIf=\\\"firstName.invalid && firstName.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n\\r\\n            <div *ngIf=\\\"firstName.errors.required\\\">\\r\\n                First name  is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"firstName.errors.minlength\\\">\\r\\n                First name must be at least 2 characters long.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"firstName.errors.validateEmpty\\\">\\r\\n                First name cannot have white spaces.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"firstName.errors?.server\\\">\\r\\n                {{firstName.errors.server}}\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" disabled=\\\"disabled\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\"\\r\\n        placeholder=\\\"Email\\\" />\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input class=\\\"form-control\\\" name=\\\"age\\\" type=\\\"number\\\" ngModel #age=\\\"ngModel\\\"\\r\\n        min=\\\"18\\\" max=\\\"99\\\" placeholder=\\\"Age\\\" />\\r\\n    \\r\\n        <div *ngIf=\\\"age.invalid && age.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n    \\r\\n            <div *ngIf=\\\"age.errors.min\\\">\\r\\n                You have to be at least 18 years old.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"age.errors.max\\\">\\r\\n                You can't be more than 99 years old.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"age.errors?.server\\\">\\r\\n                {{age.errors.server}}\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{invisible: userType === 'Doctor'}\\\">\\r\\n        <input class=\\\"form-control\\\" disabled=\\\"disabled\\\" name=\\\"registryDate\\\" ngModel type=\\\"text\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{invisible: userType === 'Patient'}\\\">\\r\\n        <input class=\\\"form-control\\\" name=\\\"specialization\\\" ngModel #spc=\\\"ngModel\\\"\\r\\n        validateEmpty minlength=\\\"3\\\" maxlength=\\\"15\\\" placeholder=\\\"Specialization\\\" />\\r\\n    \\r\\n        <div *ngIf=\\\"spc.invalid && spc.dirty\\\" class=\\\"form-control danger-alert\\\">\\r\\n    \\r\\n            <div *ngIf=\\\"spc.errors.validateEmpty\\\">\\r\\n                Specialization cannot have white spaces.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"spc.errors.minlength\\\">\\r\\n                Specialization must be at least 3 characters long.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"spc.errors?.server\\\">\\r\\n                {{spc.errors.server}}\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{invisible: userType === 'Patient'}\\\">\\r\\n        <input class=\\\"form-control\\\" name=\\\"yearsOfExperience\\\" type=\\\"number\\\" ngModel #exp=\\\"ngModel\\\"\\r\\n        min=\\\"1\\\" max=\\\"45\\\" placeholder=\\\"Experience\\\" />\\r\\n    \\r\\n        <div *ngIf=\\\"exp.invalid && exp.dirty\\\"\\r\\n        class=\\\"form-control danger-alert\\\">\\r\\n    \\r\\n            <div *ngIf=\\\"exp.errors.min\\\">\\r\\n                Experience have to be at least 1 year.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"exp.errors.max\\\">\\r\\n                Experience can't be more than 45 years.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"exp.errors?.server\\\">\\r\\n                {{exp.errors.server}}\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\"\\r\\n            [disabled]=\\\"profileForm.invalid || isModelEqual\\\"\\r\\n            class=\\\"btn btn-success btn-sm\\\">\\r\\n            Save changes\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","import { Component, AfterViewInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\nimport { ProfileService } from '../../../services/profile.service';\r\nimport { ErrorHandlerService } from '../../../services/errorHandler.service';\r\n\r\nimport { UserType, ControllerType, GetMethod, PostMethod } from '../../../enums/enum.models';\r\n\r\n@Component({\r\n    selector: 'app-user-info-cmp',\r\n    templateUrl: './user-info.component.html',\r\n    styleUrls: ['./user-info.component.css', '../shared.profile.css']\r\n})\r\n\r\nexport class UserInfoComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @ViewChild('profileForm') form: NgForm;\r\n    public userType: string;\r\n    public isModelEqual: boolean;\r\n\r\n    constructor(private profileSrc: ProfileService,\r\n                private errorHandler: ErrorHandlerService) {\r\n        this.isModelEqual = true;\r\n        this.userType = UserType[ this.profileSrc.UserType ];\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getUserProfile();\r\n    }\r\n\r\n    private getUserProfile(): void {\r\n        if (this.profileSrc.User === undefined) {\r\n            this.profileSrc.getData(ControllerType.profile, GetMethod.info).subscribe((res) => {\r\n                this.profileSrc.User = res;\r\n                this.setUserProfile();\r\n            });\r\n        } else {\r\n            setTimeout(() => {\r\n                this.setUserProfile();\r\n            }, 20);\r\n        }\r\n    }\r\n\r\n    private setUserProfile(): void {\r\n        this.actionOnModel((modelValue, cntrlValue, prop) => {\r\n            return this.setFormControl(modelValue, cntrlValue, prop);\r\n        });\r\n    }\r\n\r\n    private setFormControl(modelValue, cntrlValue, prop): boolean {\r\n        if (modelValue !== null) {\r\n            this.form.controls[prop].setValue(modelValue);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public onChnage(): void {\r\n        this.actionOnModel((modelValue, cntrlValue, prop) => {\r\n            return this.compareControlModelValue(modelValue, cntrlValue, prop);\r\n        });\r\n    }\r\n\r\n    public compareControlModelValue(modelValue, cntrlValue, prop): boolean {\r\n        if (cntrlValue === modelValue) {\r\n            return !(this.isModelEqual = true);\r\n         } else {\r\n             return !(this.isModelEqual = false);\r\n         }\r\n    }\r\n\r\n    private actionOnModel(action: (modelValue, cntrlValue, prop) => boolean): void {\r\n        const props = Object.keys(this.profileSrc.User);\r\n        const controls = this.form.controls;\r\n\r\n        for (let i = 0; i < props.length; i++) {\r\n            const prop = props[i] === 'userName' ? 'email' : props[i];\r\n            const modelValue = this.profileSrc.User[props[i]];\r\n            const cntrlValue = controls[prop].value;\r\n\r\n            const res = action(modelValue, cntrlValue, prop);\r\n            if (res) { return; }\r\n        }\r\n    }\r\n\r\n    public onSaveChanges(): void {\r\n        this.actionOnModel((modelValue, cntrlValue, prop) => {\r\n            return this.reassignValues(modelValue, cntrlValue, prop);\r\n        });\r\n\r\n        this.profileSrc.postData(\r\n            ControllerType.profile,\r\n            PostMethod.editProfile,\r\n            this.profileSrc.User\r\n        )\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe(() => {\r\n            alert('Profile changed!');\r\n            this.isModelEqual = true;\r\n        }, (err) => {\r\n            this.errorHandler.setServerErrors(err, this.profileSrc.User, this.form);\r\n        });\r\n    }\r\n\r\n    private reassignValues(modelValue, cntrlValue, prop): boolean {\r\n        this.profileSrc.User[prop] = cntrlValue;\r\n        return false;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n","module.exports = \".table td{\\r\\n    box-shadow: inset 0px 0px 15px 5px rgb(220, 232, 233);\\r\\n    color: rgb(92, 86, 78);\\r\\n}\\r\\n\\r\\n.dataCell {\\r\\n    box-shadow: inset 0px 0px 15px 5px rgb(220, 232, 233);\\r\\n    color: rgb(92, 86, 78);\\r\\n}\\r\\n\\r\\n.table th{\\r\\n    color: rgb(117, 110, 100);\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.table th {\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.table th, td {\\r\\n    text-align: center;\\r\\n    padding-top: 3%;\\r\\n}\\r\\n\\r\\n.editBtn, .deleteBtn, .addBtn {\\r\\n    width: 80px;\\r\\n}\\r\\n\\r\\n.btnsCell{\\r\\n    padding-top: 1.5%;\\r\\n}\\r\\n\\r\\n.invisible{\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n#NoContent{\\r\\n    width: 280px;\\r\\n    margin-left: 100%;\\r\\n}\\r\\n\\r\\n#NoContent p {\\r\\n    font-style: italic;\\r\\n    color: rgb(117, 110, 100);\\r\\n    font-size: 18px;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<table class=\\\"table table-hover table-inverse table-responsive\\\">\\r\\n  <thead class=\\\"thead-default\\\">\\r\\n      <tr id=\\\"tableHeader\\\">\\r\\n        <th *ngFor=\\\"let h of profileSrc.Headers\\\">{{h}}</th>\\r\\n        <th>Actions</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody id=\\\"tableBody\\\">\\r\\n      <tr *ngFor=\\\"let it of items\\\" class=\\\"tableRow\\\">\\r\\n        <td *ngFor=\\\"let v of it\\\" scope=\\\"row\\\">{{v}}</td>\\r\\n        <td class=\\\"btnsCell\\\">\\r\\n          <button\\r\\n          type=\\\"button\\\"\\r\\n          name=\\\"addUser\\\"\\r\\n          (click)=\\\"actionOnClick($event)\\\"\\r\\n          [ngClass]=\\\"{invisible: addedUsers}\\\"\\r\\n          class=\\\"btn btn-success addBtn\\\">Add</button>\\r\\n          \\r\\n          <!--     (click)=\\\"actionOnClick($event)\\\" -->\\r\\n          <button\\r\\n          type=\\\"button\\\"\\r\\n          name=\\\"editUser\\\"\\r\\n      \\r\\n          [ngClass]=\\\"{invisible: !addedUsers ||\\r\\n          profileSrc.UserType === 0}\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          data-target=\\\"#exampleModal\\\"\\r\\n          class=\\\"btn btn-primary editBtn\\\">Edit</button>\\r\\n\\r\\n          <button\\r\\n          type=\\\"button\\\"\\r\\n          name=\\\"deleteUser\\\"\\r\\n          (click)=\\\"actionOnClick($event)\\\"\\r\\n          [ngClass]=\\\"{invisible: !addedUsers}\\\"\\r\\n          class=\\\"btn btn-secondary deleteBtn\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <div id=\\\"NoContent\\\" [ngClass]=\\\"{invisible: items.length !== 0}\\\">\\r\\n        <p>No data here yet!</p>\\r\\n      </div>\\r\\n    </tbody>\\r\\n</table>\\r\\n  \\r\\n  <!-- Modal -->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit item</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item-name\\\" class=\\\"col-form-label\\\">Name:</label>\\r\\n              <input [(ngModel)]=\\\"editName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"item-name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item-type\\\" class=\\\"col-form-label\\\">Type:</label>\\r\\n              <input [(ngModel)]=\\\"editType\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"item-type\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"saveOnClick($event)\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { Http } from '@angular/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as $ from 'jquery';\r\nimport { untilComponentDestroyed } from 'ng2-rx-componentdestroyed';\r\n\r\nimport { ProfileService } from '../../../services/profile.service';\r\n\r\nimport { EmailModel } from '../../../models/email.post.model';\r\nimport { GetMethod, ControllerType, PostMethod } from '../../../enums/enum.models';\r\n\r\n@Component({\r\n  selector: 'app-users-data-cmp',\r\n  templateUrl: './users-data.component.html',\r\n  styleUrls: ['./users-data.component.css']\r\n})\r\n\r\nexport class UsersDataComponent implements OnDestroy {\r\n\r\n  public items: Array<Array<any>>;\r\n  public addedUsers: boolean;\r\n\r\n  constructor(private http: Http,\r\n              private profileSrc: ProfileService,\r\n              private route: ActivatedRoute) {\r\n        this.items = [];\r\n        route.queryParams\r\n        .pipe(untilComponentDestroyed(this))\r\n        .subscribe((params) => {\r\n            this.addedUsers = params['addedOnes'] === 'true';\r\n            this.processParam(params['addedOnes']);\r\n        });\r\n    }\r\n\r\n    private processParam(addedOnes: string): void {\r\n        const getMethod = addedOnes === 'true' ?\r\n        GetMethod.getUserFiles : GetMethod.getAllFiles;\r\n\r\n        if (getMethod === GetMethod.getAllFiles) {\r\n\r\n            if (this.profileSrc.AllUsers.length === 0) {\r\n                this.getData(getMethod)\r\n                .subscribe(() => {\r\n                    this.profileSrc.AllUsers = this.items;\r\n                });\r\n            } else {\r\n                this.setDataTable(this.profileSrc.AllUsers, false);\r\n            }\r\n\r\n        } else if (getMethod === GetMethod.getUserFiles) {\r\n\r\n            if (this.profileSrc.RelatedUsers.length === 0) {\r\n                this.getData(getMethod)\r\n                .subscribe(() => {\r\n                    this.profileSrc.RelatedUsers = this.items;\r\n                });\r\n            } else {\r\n                this.setDataTable(this.profileSrc.RelatedUsers, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getData(getMethod: GetMethod): Observable<void> {\r\n        return this.profileSrc.getData(\r\n            ControllerType[this.profileSrc.UserRole],\r\n            getMethod\r\n        ).pipe( map((data: Array<any>) => {\r\n                this.setDataTable(data);\r\n            }),\r\n            untilComponentDestroyed(this)\r\n        );\r\n    }\r\n\r\n    private setDataTable(data: Array<any>, receivedFromServer: boolean = true): void {\r\n        this.profileSrc.setHeaders();\r\n        this.items = this.profileSrc.setValues(data, receivedFromServer);\r\n    }\r\n\r\n    public actionOnClick(event): void {\r\n        const email = this.getEmail(event);\r\n        const model = new EmailModel( email );\r\n        const btnName = String( $(event.target).attr('name') );\r\n        $(event.target).attr('disabled', true);\r\n\r\n        if (PostMethod[btnName] !== undefined) {\r\n\r\n            this.profileSrc.postData(\r\n                ControllerType[this.profileSrc.UserRole],\r\n                PostMethod[btnName],\r\n                model\r\n            )\r\n            .pipe(untilComponentDestroyed(this))\r\n            .subscribe(() => {\r\n                alert('Success!');\r\n                $(event.target).attr('disabled', false);\r\n                this.onSuccess(btnName, email);\r\n            }, (err) => {\r\n                $(event.target).attr('disabled', false);\r\n                this.actionErrorResult(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    private onSuccess(btnName: string, email: string): void {\r\n        if (btnName === 'addUser') {\r\n            this.addOnClicked(email);\r\n        } else if (btnName === 'deleteUser') {\r\n            this.deleteOnCLicked(email);\r\n        }\r\n    }\r\n\r\n    private addOnClicked(email: string): void {\r\n        const user = this.findUser(email);\r\n        if (user !== null) {\r\n            const exists = this.profileSrc.RelatedUsers.includes(user);\r\n\r\n            if (exists === false) {\r\n                this.profileSrc.RelatedUsers.push(user);\r\n            } else {\r\n                alert('This user is already added!');\r\n            }\r\n        }\r\n    }\r\n\r\n    private deleteOnCLicked(email: string): void {\r\n        const user = this.findUser(email);\r\n        const index = this.profileSrc.RelatedUsers.indexOf(user);\r\n        this.profileSrc.RelatedUsers.splice(index, 1);\r\n    }\r\n\r\n    private findUser(email: string): Array<any> {\r\n        for (let i = 0; i < this.profileSrc.AllUsers.length; i++) {\r\n            const userProperties = this.profileSrc.AllUsers[i];\r\n\r\n            for (let j = 0; j < userProperties.length; j++) {\r\n                if (userProperties[j] === email) {\r\n                    return userProperties;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getEmail(event): string {\r\n        return $(event.target).closest('.tableRow').children()[3].innerText;\r\n    }\r\n\r\n    private actionErrorResult(err): void {\r\n        if (err.text() !== '') {\r\n            alert(err.text());\r\n        } else {\r\n            alert('Unexpected server error, try againg later, please');\r\n        }\r\n    }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[validateEmpty]',\r\n  providers: [\r\n    {provide: NG_VALIDATORS, useExisting: EmptyValidator, multi: true}\r\n  ]\r\n})\r\n\r\nexport class EmptyValidator implements Validator {\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        if (c.value !== null) {\r\n            const str = String(c.value);\r\n\r\n            if (str !== '' && str.trim().length === 0) {\r\n                return { validateEmpty: true };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Directive, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[validateEqual]',\r\n  providers: [\r\n    {provide: NG_VALIDATORS, useExisting: EqualValidator, multi: true}\r\n  ]\r\n})\r\n\r\nexport class EqualValidator implements Validator {\r\n\r\n    private currentControl: AbstractControl;\r\n\r\n    constructor(@Attribute('validateEqual') public validateEqual: string) {}\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        this.subscribeToPasswordControlEvents(c);\r\n        const confirmPass = c.value;\r\n        const initialPass = c.root.get(this.validateEqual).value;\r\n\r\n        if (initialPass !== confirmPass) {\r\n            return { validateEqual: false };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private subscribeToPasswordControlEvents(c: AbstractControl) {\r\n        if (this.currentControl === undefined) {\r\n            this.currentControl = c;\r\n            const passwordControl = c.root.get(this.validateEqual);\r\n            passwordControl.valueChanges.subscribe(() => this.recheckComparison());\r\n        }\r\n    }\r\n\r\n    private recheckComparison() {\r\n        this.currentControl.setValue(this.currentControl.value);\r\n    }\r\n}\r\n","import { Directive, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[max]',\r\n  providers: [\r\n    {provide: NG_VALIDATORS, useExisting: MaxValidator, multi: true}\r\n  ]\r\n})\r\n\r\nexport class MaxValidator implements Validator {\r\n\r\n    constructor(@Attribute('max') public maxValue: any) {\r\n        this.maxValue = Number(this.maxValue);\r\n    }\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        const currentValue = Number(c.value);\r\n\r\n        if (currentValue > this.maxValue) {\r\n            return { max: true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { Directive, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[min]',\r\n  providers: [\r\n    {provide: NG_VALIDATORS, useExisting: MinValidator, multi: true}\r\n  ]\r\n})\r\n\r\nexport class MinValidator implements Validator {\r\n\r\n    constructor(@Attribute('min') public minValue: any) {\r\n        this.minValue = Number(this.minValue);\r\n    }\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        if (c.value !== null && c.value !== '') {\r\n            const currentValue = Number(c.value);\r\n\r\n            if (currentValue < this.minValue) {\r\n                return { min: true };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { Directive, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS, FormGroup, FormControl } from '@angular/forms';\r\nimport { ApiService } from '../services/api.service';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[userExists]',\r\n  providers: [\r\n    {provide: NG_VALIDATORS, useExisting: UserExistenceValidator, multi: true}\r\n  ]\r\n})\r\n\r\nexport class UserExistenceValidator implements Validator {\r\n\r\n  constructor(@Attribute('userExists') public expectation: any,\r\n              private apiService: ApiService) {\r\n      this.expectation = this.expectation === 'true';\r\n  }\r\n\r\n  validate(form: FormGroup): { [key: string]: any } {\r\n    const emailControl: AbstractControl = form.controls['email'];\r\n\r\n    if (emailControl !== undefined) {\r\n      if (emailControl.valid) {\r\n        this.apiService.userExists(emailControl.value).subscribe(res => {\r\n          this.checkResponse(res, emailControl);\r\n        });\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n    private checkResponse(res: boolean, emailControl: AbstractControl): void {\r\n      if (this.expectation === true) {\r\n\r\n        if (res === false) {\r\n          emailControl.setErrors({userExists: 'There is no such a user.'});\r\n        }\r\n      } else if (res === true) {\r\n        emailControl.setErrors({userExists: 'A user with such an email already exists.'});\r\n      }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { EmptyValidator } from './empty.validator.directive';\r\nimport { UserExistenceValidator } from './user-existence.validator';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [\r\n    EmptyValidator,\r\n    UserExistenceValidator\r\n  ],\r\n  exports: [\r\n    EmptyValidator,\r\n    UserExistenceValidator\r\n  ]\r\n})\r\n\r\nexport class ValidatorsModule { }\r\n","\r\nexport enum PostMethod {\r\n    addFile,\r\n    deleteDelete,\r\n    editUser,\r\n    editProfile,\r\n    changeLogin,\r\n    changePassword\r\n}\r\n\r\nexport enum GetMethod {\r\n    getAllFiles,\r\n    getUserFiles,\r\n    info\r\n}\r\n\r\nexport enum ControllerType {\r\n    patient,\r\n    doctor,\r\n    profile,\r\n    manage\r\n}\r\n\r\nexport enum UserType {\r\n    Patient,\r\n    Doctor,\r\n    Admin\r\n}\r\n\r\nexport enum Profile {\r\n    username,\r\n    role,\r\n    sub\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","export class ChangePasswordModel {\r\n    constructor(currentPass: string, newPass: string) {\r\n        this.CurrentPassword = currentPass;\r\n        this.NewPassword = newPass;\r\n    }\r\n\r\n    CurrentPassword: string;\r\n    NewPassword: string;\r\n}\r\n","export class EmailModel {\r\n    constructor(email: string) {\r\n        this.Email = email;\r\n    }\r\n    Email: string;\r\n}\r\n","export class ErrorModel {\r\n    constructor(field: string, message: string) {\r\n        this.Field = field;\r\n        this.Message = message;\r\n    }\r\n\r\n    Field: string;\r\n    Message: string;\r\n}\r\n","export class GoogleResponse {\r\n    constructor(idToken: string) {\r\n        this.IdToken = idToken;\r\n    }\r\n\r\n    IdToken: string;\r\n    RegisterAsDoctor: boolean;\r\n}\r\n","export class UserModel {\r\n    LastName: string = undefined;\r\n    FirstName: string = undefined;\r\n    Age: any = undefined;\r\n    UserName: string = undefined;\r\n}\r\n","import { Injectable, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable, interval, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { HubService } from './hub.service';\r\nimport { ApiService } from './api.service';\r\nimport { RequestBuilderService } from './requestBuilder.service';\r\n\r\nimport { GoogleResponse } from '../models/google.response.model';\r\nimport { Profile } from '../enums/enum.models';\r\n\r\n@Injectable()\r\nexport class AccountService extends ApiService implements OnDestroy {\r\n\r\n    private refreshSubsc: Subscription;\r\n    private checkSubsc: Subscription;\r\n    @Output() isLoggedOut = new EventEmitter();\r\n    @Output() isLoggedIn = new EventEmitter();\r\n\r\n    constructor(protected http: Http,\r\n                protected authService: RequestBuilderService,\r\n                private hubSerivce: HubService) {\r\n        super(http);\r\n        this.checkAccountAuth();\r\n    }\r\n\r\n    public configureTokens(data: AuthTokenModel): void {\r\n        this.authService.setTokens(data);\r\n        this.setTokensRefreshTime();\r\n        this.isLoggedIn.emit();\r\n        this.configHub();\r\n    }\r\n\r\n    private configHub(): void {\r\n        this.hubSerivce.initHubConnection().then(() => {\r\n            this.connect();\r\n        });\r\n    }\r\n\r\n    private connect(): void {\r\n        if (this.hubSerivce._hubConnection) {\r\n            const role = this.get(Profile.role);\r\n            const group = this.getGroup(role);\r\n\r\n            if (group !== null) {\r\n                this.hubSerivce._hubConnection.send('OnConnectedAsync', group);\r\n            }\r\n        }\r\n    }\r\n\r\n    private disconnect(): void {\r\n        if (this.hubSerivce._hubConnection) {\r\n            const role = this.get(Profile.role);\r\n            const group = this.getGroup(role);\r\n\r\n            if (group !== null) {\r\n                this.hubSerivce._hubConnection.send('OnDisconnectedAsync', group);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getGroup(role: string): string {\r\n        switch (role) {\r\n            case 'patient':\r\n                return 'PatientsGroup';\r\n            case 'doctor':\r\n                return 'DoctorsGroup';\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    public checkAccountAuth(): void {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n        if (refreshToken !== null) {\r\n            this.checkSubsc = this.getRefreshTokens()\r\n            .subscribe((res) => {\r\n                this.authService.updateTokens(res);\r\n                this.isLoggedIn.emit();\r\n                this.setTokensRefreshTime();\r\n                this.configHub();\r\n            }, (errRes) => {\r\n                this.isLoggedOut.emit();\r\n            });\r\n        }\r\n    }\r\n\r\n    public register(model: IRegisterModel): Observable<Response> {\r\n        return this.http.post(`/api/account/register`, model);\r\n    }\r\n\r\n    public getAuthorizationCode(model: GoogleResponse): Observable<Response> {\r\n        return this.http.get(`/external/authorize`,\r\n        {\r\n            headers: this.authService.authHeaders(),\r\n            params: this.authService.externalAuthBody(model.IdToken, model.RegisterAsDoctor)\r\n        });\r\n    }\r\n\r\n    public getAuthorizationTokens(code: string): Observable<AuthTokenModel> {\r\n        return this.http.post(`/connect/token`,\r\n                              this.authService.authCodeGrantBody(code),\r\n                              {headers: this.authService.authHeaders()})\r\n                              .pipe( map(res => res.json() ));\r\n    }\r\n\r\n    public getPasswordTokens(model: IUser): Observable<AuthTokenModel> {\r\n        return this.http.post(`/connect/token`,\r\n                              this.authService.passwordGrantBody(model),\r\n                              {headers: this.authService.authHeaders()})\r\n                              .pipe( map(res => res.json() ));\r\n    }\r\n\r\n    public setTokensRefreshTime(): void {\r\n        this.refreshSubsc = interval( this.authService.getExpMilliseconds() )\r\n            .subscribe(() => {\r\n                this.getRefreshTokens()\r\n                .subscribe((res) => {\r\n                this.authService.updateTokens(res);\r\n            }, (errRes) => {\r\n                this.isLoggedOut.emit();\r\n                this.hubSerivce._hubConnection.stop();\r\n            });\r\n        });\r\n    }\r\n\r\n    private getRefreshTokens(): Observable<AuthTokenModel> {\r\n        return this.http.post(`/connect/token`,\r\n                              this.authService.refreshGrantBody(),\r\n                              {headers: this.authService.authHeaders()})\r\n                              .pipe( map(res => res.json() ));\r\n    }\r\n\r\n    public logout(): void {\r\n        if (this.refreshSubsc) {\r\n            this.refreshSubsc.unsubscribe();\r\n        }\r\n        this.authService.removeTokens();\r\n        this.disconnect();\r\n        this.hubSerivce._hubConnection.stop();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.refreshSubsc) {\r\n            this.refreshSubsc.unsubscribe();\r\n        }\r\n        if (this.checkSubsc) {\r\n            this.checkSubsc.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\nimport { Profile } from '../enums/enum.models';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n    constructor(protected http: Http) {\r\n    }\r\n\r\n    public userExists(email: string): Observable<boolean> {\r\n        return this.http.get(`/api/account/checkUser?Email=` + email)\r\n                        .pipe(map(res => res.json() ) );\r\n    }\r\n\r\n    public get(prop: Profile): string {\r\n        const token = localStorage.getItem('id_token');\r\n\r\n        try {\r\n            return jwt_decode(token)[Profile[prop]].toLowerCase();\r\n        } catch (Error) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ErrorModel } from '../models/error.model';\r\n\r\n@Injectable()\r\nexport class ErrorHandlerService {\r\n\r\n    public setServerErrors(res: any, model: any, formControl: NgForm): void {\r\n        const errors = this.handleErrorResponse(res, model);\r\n\r\n        errors.forEach(err => {\r\n            if (err.Field !== '') {\r\n                formControl.controls[err.Field].setErrors({server: err.Message});\r\n            } else {\r\n                formControl.control.setErrors({server: err.Message});\r\n            }\r\n        });\r\n    }\r\n\r\n    private handleErrorResponse(res: any, model: any): ErrorModel[] {\r\n        const data = res.json();\r\n        const props = Object.keys(model);\r\n        const customizedErros: ErrorModel[] = [];\r\n\r\n        if (data.errors !== undefined) {\r\n\r\n            data.errors.forEach(err => {\r\n              customizedErros.push( this.wrapError(props, err) );\r\n            });\r\n        } else {\r\n            customizedErros.push( this.wrapError(props, data) );\r\n        }\r\n\r\n        return customizedErros;\r\n    }\r\n\r\n    private wrapError(props: string[], err: any): ErrorModel {\r\n        let currentError: ErrorModel;\r\n        const index = props.indexOf( String(err.field) );\r\n\r\n        if (index > -1) {\r\n          currentError = new ErrorModel(props[index], err.message);\r\n        } else {\r\n          currentError = new ErrorModel('', err.message);\r\n        }\r\n\r\n        return currentError;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HubConnection } from '@aspnet/signalr';\r\nimport * as signalR from '@aspnet/signalr';\r\n\r\n@Injectable()\r\nexport class HubService {\r\n\r\n    public _hubConnection: HubConnection | undefined;\r\n\r\n    public initHubConnection(): Promise<void> {\r\n        this._hubConnection = new signalR.HubConnectionBuilder()\r\n        .withUrl('https://localhost:44386/connectionHub?access_token=' + localStorage.getItem('access_token'))\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .build();\r\n        this.initHubMethods();\r\n        return this._hubConnection.start();\r\n    }\r\n\r\n    private initHubMethods(): void {\r\n        this._hubConnection.on('OnConnectedAsync', (group: string) => {});\r\n        this._hubConnection.on('OnDisconnectedAsync', (group: string) => {});\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { UserType } from '../enums/enum.models';\r\nimport { UserModel } from '../models/user.model';\r\n\r\n@Injectable()\r\nexport class MappingService {\r\n\r\n    public getProps(userType: UserType): string[] {\r\n        const props = Object.keys( this.getRelatedUser(userType) );\r\n        const replaceIndex = props.indexOf('UserName');\r\n        props.splice(replaceIndex, 1, 'Email');\r\n        return this.parseProps(props);\r\n    }\r\n\r\n    private getRelatedUser(userType: UserType): any {\r\n        let relatedUser;\r\n\r\n        if (userType === UserType.Patient) {\r\n          relatedUser = new UserModel(); //DoctorModel();\r\n        } else {\r\n          relatedUser = new UserModel(); //new PatientModel();\r\n        }\r\n\r\n        return relatedUser;\r\n    }\r\n\r\n    private parseProps(props: string[]): string[] {\r\n        const parsedArray: string[] = [];\r\n\r\n        for (let i = 0; i < props.length; i++) {\r\n            const strArray = props[i].split('');\r\n            let word = '';\r\n\r\n            for (let j = 1; j < strArray.length; j++) {\r\n                const upCase = this.IsUpCase(strArray[j]);\r\n\r\n                if (upCase) {\r\n                    word += strArray[j - 1] + ' ' +\r\n                    strArray[j].toLocaleLowerCase();\r\n                    j++;\r\n\r\n                } else if (j === strArray.length - 1) {\r\n                    word += strArray[j - 1] + strArray[j];\r\n                } else {\r\n                    word += strArray[j - 1];\r\n                }\r\n            }\r\n\r\n            parsedArray.push(word);\r\n        }\r\n\r\n        return parsedArray;\r\n    }\r\n\r\n    private IsUpCase(ch1: string): boolean {\r\n        return ch1 === ch1.toUpperCase();\r\n    }\r\n\r\n    public parseObjects(objectsArray: Array<any>, userType: any) {\r\n        const props = Object.keys( this.getRelatedUser(userType) );\r\n        const valuesArray = new Array<Array<any>>();\r\n\r\n        objectsArray.forEach((obj, index) => {\r\n            valuesArray[index] = new Array<any>();\r\n\r\n            for (let j = 0; j < props.length; j++) {\r\n                let prop = props[j];\r\n                prop = this.firstLetterToLower(prop);\r\n                valuesArray[index].push( obj[prop] );\r\n            }\r\n        });\r\n\r\n        return valuesArray;\r\n    }\r\n\r\n    public ParseObject(object: any, userType: any): any[] {\r\n        const props = Object.keys( this.getRelatedUser(userType) );\r\n        const valuesArray = new Array<any>();\r\n\r\n        for (let i = 0; i < props.length; i++) {\r\n            let prop = props[i];\r\n            prop = this.firstLetterToLower(prop);\r\n            valuesArray.push( object[prop] );\r\n        }\r\n\r\n        return valuesArray;\r\n    }\r\n\r\n    private firstLetterToLower(str: string): string {\r\n        return str.split('')[0].toLocaleLowerCase() + str.substr(1, str.length);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { RequestBuilderService } from './requestBuilder.service';\r\nimport { HubService } from './hub.service';\r\nimport { MappingService } from './mapping.service';\r\n\r\nimport { Profile, UserType, ControllerType, GetMethod, PostMethod } from '../enums/enum.models';\r\n\r\n@Injectable()\r\nexport class ProfileService extends ApiService {\r\n\r\n    public User: any;\r\n    public UserRole: string;\r\n    public UserType: UserType;\r\n    public AllUsers: Array<Array<any>>;\r\n    public RelatedUsers: Array<Array<any>>;\r\n    public Headers: Array<any>;\r\n\r\n    constructor(protected http: Http,\r\n                protected authSrc: RequestBuilderService,\r\n                private hubSrc: HubService,\r\n                private mappingSrc: MappingService) {\r\n        super(http);\r\n        this.UserRole = this.get(Profile.role);\r\n        this.UserType = this.getUserType();\r\n        this.AllUsers = [];\r\n        this.RelatedUsers = [];\r\n        this.Headers = [];\r\n        this.initHubMethods();\r\n    }\r\n\r\n    private initHubMethods(): void {\r\n        this.hubSrc._hubConnection.on('OnNewUserAdded', (user: any) => {\r\n            this.addUser(user);\r\n        });\r\n    }\r\n\r\n    private addUser(user: any): void {\r\n        const valuesArray = this.mappingSrc.ParseObject(user, this.UserType);\r\n        if (this.AllUsers.length !== 0) {\r\n            this.AllUsers.push(valuesArray);\r\n        }\r\n    }\r\n\r\n    public setHeaders(): void {\r\n        if (this.Headers.length === 0) {\r\n            this.Headers = this.mappingSrc.getProps(this.UserType);\r\n        }\r\n    }\r\n\r\n    public setValues(data: Array<any>, receivedFromServer: boolean): any[] {\r\n        if (data.length !== 0) {\r\n            if (receivedFromServer === true) {\r\n                return this.mappingSrc.parseObjects(data, this.UserType);\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    public getData(controller: ControllerType, getMethod: GetMethod):  Observable<Response> {\r\n\r\n        return this.http.get(`/api/` +\r\n        ControllerType[controller] + '/' +\r\n        GetMethod[getMethod],\r\n        {headers: this.authSrc.authFormHeaders()})\r\n        .pipe( map(res => res.json() ));\r\n    }\r\n\r\n    public postData(controller: ControllerType,\r\n                    postType: PostMethod,\r\n                    model: any): Observable<Response> {\r\n\r\n        return this.http\r\n        .post(`/api/` +\r\n        ControllerType[controller] + '/' +\r\n        PostMethod[postType],\r\n        model,\r\n        {headers: this.authSrc.authJsonHeaders()});\r\n    }\r\n\r\n    private getUserType(): any {\r\n        switch (this.UserRole) {\r\n            case 'patient1':\r\n            return UserType.Admin;//UserType.Patient;\r\n            case 'doctor1':\r\n            return UserType.Admin;//UserType.Doctor;\r\n            default:\r\n                return UserType.Admin;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class RequestBuilderService {\r\n\r\n    private readonly client_id: string;\r\n\r\n    constructor(private http: Http) {\r\n      this.client_id = '719762341905-nsgda0ahgf2loco1mte1jrtbgpu5gg0d.apps.googleusercontent.com'; //'6839ef20b75817b79109';\r\n    }\r\n\r\n    // for requesting secure data using json\r\n    public authJsonHeaders() {\r\n        const header = new Headers();\r\n        header.append('Content-Type', 'application/json');\r\n        header.append('Accept', 'application/json');\r\n        header.append('Authorization', 'Bearer ' + localStorage.getItem('access_token'));\r\n        return header;\r\n    }\r\n\r\n    public authFormHeaders() {\r\n        const header = new Headers();\r\n        header.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        header.append('Accept', 'application/json');\r\n        header.append('Authorization', 'Bearer ' + localStorage.getItem('access_token'));\r\n        return header;\r\n    }\r\n\r\n    public authHeaders(): Headers {\r\n        const headers = new Headers(\r\n        {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Accept': 'application/json'\r\n        });\r\n        return headers;\r\n    }\r\n\r\n    public passwordGrantBody(model: IUser): string {\r\n        let body = '';\r\n        body += 'client_id=' + this.client_id + '&';\r\n        body += 'grant_type=password&';\r\n        body += 'username=' + model.email + '&';\r\n        body += 'password=' + model.password + '&';\r\n        body += 'scopes=openid profile offline_access roles';\r\n        return body;\r\n    }\r\n\r\n    public externalAuthBody(id_token: string, registerAsDoctor: boolean): string {\r\n        let body = '';\r\n        body += 'client_id=' + this.client_id + '&';\r\n        body += 'response_type=code&';\r\n        body += 'state=' + Math.random().toString(36).substring(3) + '&';\r\n        body += 'scopes=openid profile offline_access roles&';\r\n        body += 'redirect_uri=https://localhost:44386&';\r\n        body += 'id_token=' + id_token + '&';\r\n        body += 'registerAsDoctor=' + registerAsDoctor;\r\n        return body;\r\n    }\r\n\r\n    public authCodeGrantBody(code: string): string {\r\n        let body = '';\r\n        body += 'client_id=' + this.client_id + '&';\r\n        body += 'grant_type=authorization_code&';\r\n        body += 'redirect_uri=https://localhost:44386&';\r\n        body += 'code=' + code + '&';\r\n        body += 'scopes=openid profile offline_access roles&';\r\n        return body;\r\n    }\r\n\r\n    public refreshGrantBody(): string {\r\n        let body = '';\r\n        body += 'client_id=' + this.client_id + '&';\r\n        body += 'grant_type=refresh_token&';\r\n        body += 'refresh_token=' + localStorage.getItem('refresh_token') + '&';\r\n        return body;\r\n    }\r\n\r\n    public setTokens(resData: AuthTokenModel): void {\r\n        localStorage.setItem('access_token', resData.access_token);\r\n        localStorage.setItem('id_token', resData.id_token);\r\n        localStorage.setItem('refresh_token', resData.refresh_token);\r\n        localStorage.setItem('expires_in', resData.expires_in.toString());\r\n    }\r\n\r\n    public updateTokens(resData: any): void {\r\n        localStorage.setItem('access_token', resData.access_token);\r\n        localStorage.setItem('id_token', resData.id_token);\r\n        localStorage.setItem('expires_in', resData.expires_in);\r\n\r\n        if (resData.refresh_token !== undefined) {\r\n            localStorage.setItem('refresh_token', resData.refresh_token);\r\n        }\r\n    }\r\n\r\n    public getExpMilliseconds(): number {\r\n        return Number( localStorage.getItem('expires_in') ) * 1000;\r\n    }\r\n\r\n    public removeTokens(): void {\r\n        localStorage.clear();\r\n    }\r\n\r\n    // showTokens() {\r\n    //     console.log('access_token ' + localStorage.getItem('access_token') );\r\n    //     console.log('id_token ' + localStorage.getItem('id_token') );\r\n    //     console.log('refresh_token ' + localStorage.getItem('refresh_token') );\r\n    //     console.log('expires_in ' + localStorage.getItem('expires_in') );\r\n    // }\r\n}\r\n"],"sourceRoot":""}